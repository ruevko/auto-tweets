# This is a basic workflow to help you get started with Actions
name: Manual rtweet Workflow

# Controls when the action will run
on:
  workflow_dispatch:
    # Inputs the workflow accepts
    inputs:
      status:
        # Friendly description to be shown in the UI instead of 'status'
        description: 'The status to post to Twitter:'
        # Input has to be provided for the workflow to run
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "rtweet"
  rtweet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Check git, write R version, and install "libcurl"
        run: |
          git log
          echo "RVERSION=$(Rscript -e 'cat(as.character(getRversion()))')" >> $GITHUB_ENV
          sudo apt-get install libcurl4-openssl-dev

      - id: rcache
        uses: actions/cache@v2
        with:
          path: resources/library
          key: ${{ runner.os }}-R${{ env.RVERSION }}-packages

      # Runs a set of commands using Rscript
      - name: Install "rtweet" package
        if: steps.rcache.outputs.cache-hit != 'true'
        run: |
          templib = "resources/library"
          dir.create(templib, recursive = TRUE)
          install.packages(c("rtweet", "xml2"), templib, quiet = TRUE)
          packageVersion("rtweet", templib)
        shell: Rscript {0}

      # Runs a single command using bash
      - if: ${{ github.event.inputs.status != '' }}
        run: 'echo -e "${{ github.event.inputs.status }}" > new_status.txt'
        shell: bash

      # Runs a single command using the runners shell
      - name: Run "rtweet.R" script
        run: Rscript rtweet.R "$APP_NAME" "$API_KEY" "$API_SECRET" "$ACCESS_TOKEN" "$ACCESS_SECRET"
        env:
          APP_NAME: ${{ secrets.TWITTER_APP_NAME }}
          API_KEY: ${{ secrets.TWITTER_API_KEY }}
          API_SECRET: ${{ secrets.TWITTER_API_KEY_SECRET }}
          ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          ACCESS_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
